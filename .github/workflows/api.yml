name: API Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  # Hanya perlu 'contents: read' untuk checkout kode
  contents: read 

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Semua perintah (run) akan dieksekusi di dalam folder ./api-test
    defaults:
      run:
        working-directory: ./api-test 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '11'
          distribution: 'temurin'

      # Langkah setup Chrome dihapus karena umumnya tidak diperlukan untuk API Test.
      # Jika Anda membutuhkannya, kembalikan langkah ini.

      - name: Build, Run Tests, and Prepare Allure
        run: |
          # Jadikan gradlew executable
          chmod +x gradlew 
          
          # Jalankan task build (membersihkan dan kompilasi)
          ./gradlew build 
          
          # Jalankan task test (menghasilkan allure-results)
          ./gradlew clean test
      
      # --- ARTIFACT GENERATION DAN UPLOAD ---

      - name: Generate Allure Report HTML
        # Task 'allureReport' akan membuat folder HTML report
        run: ./gradlew allureReport
        # Penting: Pastikan ini berjalan meskipun tes gagal agar report kegagalan tetap dibuat
        if: always() 

      - name: Upload Allure HTML Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Allure-Test-Report-Download
          # Path default Allure Report HTML untuk proyek Gradle.
          # Pastikan path ini benar di proyek Anda.
          path: build/reports/allure-report/
        # Penting: Pastikan ini berjalan meskipun langkah sebelumnya gagal
        if: always()
